version: "3.9"

services:

  base:
    build: .
    volumes:
      - .:/usr/src/app/
    env_file:
      - .env

  web:
    extends:
      service: base
    command: flask run
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - db
      - migration

  redis:
    image: redis:alpine
    command: redis-server
    volumes:
      - .:/usr/src/redis
    ports:
      - "6379:6379"

  celery:
    extends:
      service: base
    command: celery worker -A app.celery_tasks.celery --beat --loglevel=info
    volumes:
      - .:/usr/src/celery/
    depends_on: 
      - web
      - redis

  flower:  
    extends:
      service: base
    image: mher/flower
    command: flower --broker=redis://redis:6379/0 --port=5555 --persistent=True
    volumes:
      - .:/usr/src/flower
    ports:  
      - 5555:5555 
    depends_on:
      - celery

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=phishbot_local_dev
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    extends:
      service: base
    command: flask db upgrade
    depends_on:
      db:
        condition: service_healthy

  ngrok:
    extends:
      service: base
    image: wernight/ngrok:latest
    ports:
    - 4040:4040
    command: ngrok http web:5000
    depends_on:
      - web